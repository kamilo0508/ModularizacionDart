class Vehiculo {
  int llantas;
  int asientos;
  String modelo;
  String marca;

  Vehiculo(this.llantas, this.asientos, this.marca, this.modelo);

  String toString() {
    return """ 
    Vehiculo:[ 
      llantas: $llantas
      asientos: $asientos
      modelo: $modelo
      marca: $marca
      ]
    """;
  }
}

@override
bool esMayorFunction(int numeroUno, int numeroDos) {
  return (numeroUno > numeroDos);
}

int compareToDateNow(String date) {
  DateTime currentTime = DateTime.now();
  DateTime otherDate = DateTime.parse(date);
  return currentTime.compareTo(otherDate);
}

String compareToDateNowasString(String date) {
  DateTime currentTime = DateTime.now();
  DateTime otherDate = DateTime.parse(date);
  int result = currentTime.compareTo(otherDate);
  return ((result >= 0) ? 'ahora o en el futuro' : ' del pasado');
}

String compareToDateNowasStringTwo(String date) {
  int result = DateTime.now().compareTo(DateTime.parse(date));
  return ((result >= 0) ? 'ahora o en el futuro' : ' del pasado');
}

void comparacionfechas() {
  print(compareToDateNowasString('2020-11-20'));
  print(compareToDateNowasString('2022-09-01'));
}

void switche() {
  String grado = "B";
  switch (grado) {
    case "A":
      {
        print("Excellent");
      }
      break;
    case "B":
      {
        print("good");
      }
      break;

    case "C":
      {
        print("Fair");
      }
      break;

    case "D":
      {
        print("Poor");
      }
      break;

    default:
      {
        print("invalid choice");
      }
      break;
  }
}

void fechas() {
  String momento = ((compareToDateNow('2020-11-20') >= 0)
      ? 'ahora     o en el futuro'
      : 'del pasado');

  print(momento);

  String momentoDos = ((compareToDateNow('2022-09-01') >= 0)
      ? "ahora o en el futura"
      : "del pasado");

  print(momentoDos);
}

void mayor() {
  bool isTrue = true;

  String esMayorAsString =
      ((esMayorFunction(5, 6) == true) ? "si es       mayor" : "no es mayor");

  print(esMayorAsString);

  if (esMayorFunction(8, 6)) {
    esMayorAsString = "es mayor desde un if";
  } else {
    esMayorAsString = "no es mayor desde un if";
  }

  print(esMayorAsString);

  dynamic esMayorDinamico = ((isTrue != true) ? "Si es mayor" : 52);

  var esMayorVar = ((5 > 6) ? "Si es mayor tipo var" : 52);
  bool esMayor = (6 > 5);
  print(esMayor);

  print(esMayorDinamico);
  print("Es mayor de tipo var ${esMayorVar}");
}

void fechascomparacion() {
  DateTime currentDate = DateTime.now();
  print(currentDate.toString());
  print(currentDate.toIso8601String());
  print(currentDate.toUtc());
  print(currentDate.toLocal());

  DateTime date = DateTime.parse('2020-11-20');
  print(date.toString());
  print(date.toIso8601String());
  print(date.toUtc());
  print(date.toLocal());

  print(currentDate.timeZoneName);

  Duration diff = currentDate.difference(date);

  print("diferencia de dias ${diff.inDays}");
}

void enwhile() {
  int count = 1;
  bool loppWhile = true;

  while (loppWhile) {
    print(" dentro del while ${count}");
    count++;
    if (count == 4) {
      loppWhile = false;
    }
  }

  count = 1;
  while (count <= 10) {
    print("dentro del while ${count}");
    count++;

    if (count == 4) {
      break;
    }
  }

  print("afuera del while ");
}

void listnums() {
  int n = 10;

  do {
    print(n);
    n--;
  } while (n > 0);
}

void factorial() {
  int num = 5;
  int factorial = 1;

  while (num >= 1) {
    factorial = factorial * num;
    num--;
  }

  print("The factorial is ${factorial}");
}

void holamundo() {
  var number = "hola";
  print(number.runtimeType);

  if (number == 'hola') {
    print('hola mundo');
  } else {
    print('este es un numero');
  }
}

void test() {
  dynamic test = 15;
  print(test.runtimeType);
  print(test.toString());
  print(test);
  test = 'hola mundo';
  print(test.runtimeType);
  print(test);
}

void lista() {
  var list = ['apples', 'bananas', 'oranges'];

  for (int index = 0; index < list.length; index++) {
    print('la fruta desde un for es: ${list[index]}');
  }

  list.forEach((String estoEsUnaVariable) {
    print('la fruta es ${estoEsUnaVariable}');
  });
}

abstract class Animal {}

abstract class Mammal extends Animal {}

abstract class Bird extends Animal {}

abstract class Fish extends Animal {}

class Dolphin extends Mammal with SwimMixin {}

class Bat extends Mammal with WalkMixin, FlyMixin {}

class Cat extends Mammal with WalkMixin {}

class Dove extends Bird with FlyMixin {}

class Duck extends Bird with WalkMixin {}

class Shark extends Fish with SwimMixin {}

class FliyingFish extends Fish with SwimMixin {}

mixin WalkMixin {
  void walk(String text) => print("walk ${text}");

  void velocity() => print("is very fast");
}

mixin SwimMixin {
  void swim(String text) => print("swim ${text}");
}

mixin FlyMixin {
  void fly(String text) => print("fly ${text}");
}

void main() {
  Dolphin newDolphin = new Dolphin();
  newDolphin.swim("Norberto");

  Cat newCat = new Cat();
  newCat.walk("inari");
  newCat.velocity();

  Bat newBat = new Bat();
  newBat.fly('ricardo');

  print("-------------------------");

  lista();

  print("-------------------------");

  comparacionfechas();

  print("-------------------------");

  switche();

  print("-------------------------");

  fechas();

  print("-------------------------");

  mayor();

  print("-------------------------");

  fechascomparacion();

  print("-------------------------");

  enwhile();

  print("-------------------------");

  listnums();

  print("-------------------------");

  factorial();

  print("-------------------------");

  holamundo();

  print("-------------------------");

  Vehiculo nuevo = new Vehiculo(4, 6, 'volvo', '2013');
  print(nuevo);

  print("-------------------------");

  test();
}
